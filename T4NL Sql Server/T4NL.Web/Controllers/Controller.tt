<#@ template debug="debug" hostspecific="true" language="C#" #>
<#@ import namespace="System.Diagnostics" #>
<#@ include file="$(SolutionDir)\T4NL.Models\T4Manager.ttinclude"  #>
<#@ include file="$(SolutionDir)\T4NL.Models\DbHelper.ttinclude"  #>
<# 
     

 
     var manager = Manager.Create(Host, GenerationEnvironment);
     var entities = DBHelper.GetEntities();
 
     foreach(Entity entity in entities)
     {
	     //manager.StartNewFolder(entity.EntityName);
         manager.StartNewFile(entity.EntityName + "Controller.cs");
 #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using T4NL.Common;
using T4NL.Models;
using T4NL.BLL;

 namespace T4NL.Web.Controllers
 {
      public class <#= entity.EntityName+"Controller" #>:Controller
      {
	    
        private <#= entity.EntityName#>BLL bll = new <#= entity.EntityName#>BLL();
		JsonModel json = new JsonModel();

		/// <summary>
        /// 首页
        /// </summary>
		public ActionResult Index()
		{
		   return View();
		}

		[AcceptVerbs(HttpVerbs.Post)]
		public JsonResult GetLists()
		{
			int pageIndex = int.Parse(Request.Form["pageIndex"]);
			int pageSize = int.Parse(Request["pageSize"]);
			string dateTime = Request.Form["dateTime"];
			string orderName = Request.Form["orderName"];
			string order = Request.Form["order"];
			string stime; string etime;
			string search = Request.Form["search"].ToString_V();
			if (!string.IsNullOrEmpty(dateTime))
			{
				try
				{
					stime = dateTime.Split('—')[0] + " 00:00:00";
					etime = dateTime.Split('—')[1] + " 23:59:59";
				}
				catch
				{
					stime = "1970-01-01 00:00:00"; etime = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
				}
			}
			else { stime = "1971-01-01 00:00:00"; etime = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"); }
			int total;
			var list = bll.GetPage(orderName, order, pageIndex, pageSize,<# if(!String.IsNullOrEmpty(entity.DateTimeColumnName)) {#> stime, etime, <#}#>search, out total);
			var grid = new { rows = list, total = total };
			return Json(grid);
		}

	   <#
		  if(entity.TableType=="u")
		  {
		#>
		/// <summary>
        /// 添加或查看
        /// </summary>
        public ActionResult View(<#=entity.Fields[0].dataType #> <#=entity.Fields[0].columnName #> = 0)
        {
            var item = bll.GetModel(<#=entity.Fields[0].columnName #>);

            if (item == null)
            {
                item = new <#= entity.EntityName#>();
            }

            return View(item);
        }

		/// <summary>
        /// 修改或添加
        /// </summary>
        public JsonResult Modify(FormCollection form)
        {
		    int id = form["<#=entity.Fields[0].columnName#>"].ToInt_V();
            var item = bll.GetModel(id);

            if (item == null)
            {
                item = new <#=entity.EntityName#>();
            }
			<# for(int i=0;i<entity.Fields.Count;i++) { Field c = entity.Fields[i];#>

			item.<#=c.columnName #>=form["<#= c.columnName #>"].<#=SqlServerDbTypeMap.DbTypeHelper(c.dataType)#><# if(i< entity.Fields.Count){#>;<#}#>
			<#}#>


            if (item.<#=entity.Fields[0].columnName#> != 0)
            {
                if (bll.Update(item))
                {
                    return json.Success("修改成功!");
                }
                else
                {
                    return json.Defeate("修改失败!");
                }
            }
            else
            {
                if (bll.Add(item)>0)
                {
                    return json.Success("添加成功!");
                }
                else
                {
                    return json.Defeate("添加失败!");
                }
            }
        }

	    /// <summary>
        /// 删除
        /// </summary>
        public JsonResult Del(<#=entity.Fields[0].dataType #> <#=entity.Fields[0].columnName #>=0)
        {
            var item = bll.GetModel(<#=entity.Fields[0].columnName #>);

            if (item == null)
            {
                return json.Defeate("不存在，请刷新重试!");
            }

            if (bll.Delete(<#=entity.Fields[0].columnName #>))
            {
                return json.Success("删除成功!");
            }
            else
            {
                return json.Success("请稍后重试!");
            }
        }

		<#}#>
	}
 }

  <#        
         manager.EndBlock(); 
     }
 
     manager.Process(true);
 #>